# 공통
spring:
  application:
    name: budget-server
#  profiles:
#    active: local

---
# local
server:
  port: 8080

spring:
  config:
    activate:
      on-profile: local
  devtools:
    restart:
      enabled: false
      trigger-file: .reloadtrigger
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres2
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      pool-name: HikariPool-1
      keepalive-time: 30000 # 30초마다 keep-alive 실행
      validation-timeout: 5000 # 5초 내에 커넥션 검증
  jpa:
    hibernate:
      ddl-auto: none
#      show-sql: true
    properties:
      hibernate:
        direct: org.hibernate.dialect.PostgresSQL10Dialect
        format_sql: true
        use_sql_comments: true
  flyway:
    enabled: true
    clean-disabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
  kafka:
    producer:
      bootstrap-servers: localhost:9092 # Kafka cluster 초기 연결 Port
  ai:
    ollama:
      base-url: http://localhost:11434
      init:
        pull-model-strategy: when_missing
        embedding:
          additional-models:
            - mxbai-embed-large
            - nomic-embed-text
        timeout: 60s
        max-retries: 1
      chat:
        options:
          model: llama3.2
          temperature: 0.5
          top-p: 0.5
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1024
        batching-strategy: TOKEN_COUNT # Optional: Controls how documents are batched for embedding
        max-document-batch-size: 10000 # Optional: Maximum number of documents per batch

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

gateway:
  secret: ${GATEWAY_SECRET}

feign:
  circuitbreaker:
    enabled: true
  client:
    config:
      default:
        loggerLevel: BASIC
  httpclient:
    hc5:
      enabled: true

# Resilience4j Circuit Breaker 설정
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED # 요청 수 기준
        slidingWindowSize: 10 # close > open 상태 변경에 대해 최근 10번 요청 기준
        minimumNumberOfCalls: 5 # close > open 상태 변경 판단 위한 최소 요청 수 5번 제한
        failureRateThreshold: 50 # minimumNumberOfCalls 이상 실패율 50% 이상 시 close > open 상태 변경
        waitDurationInOpenState: 10s # 서킷 open 시간으로, 이후부터 half-open 상태로 변경하여 복구 시작
        permittedNumberOfCallsInHalfOpenState: 2 # half-open 상태에서 허용할 테스트 요청 수
        automaticTransitionFromOpenToHalfOpenEnabled: true # waitDurationInOpenState 이후 자동으로 open > half-open 상태 변경할지 여부
    instances:
      # Feign 클라이언트별 개별 설정
      OpenBankingFeignClient:
        baseConfig: default # 위 default 설정 상속
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500ms
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
    instances:
      OpenBankingFeignClient:
        baseConfig: default

openbanking:
  api:
    base-url: https://api.example.com

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    com.teady.budgetserver.adapter.secondary.openapi.openbanking: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,circuitbreakers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}