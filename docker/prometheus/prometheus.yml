# Prometheus의 전역 설정
global:
  # 메트릭을 수집하는 주기 (15초마다 스크래핑)
  scrape_interval: 15s
  # 스크래핑 타임아웃 시간 (10초 이내에 응답 없으면 실패 처리)
  scrape_timeout: 10s
  # 외부 시스템에 전달할 때 붙일 레이블
  external_labels:
    monitor: 'ai-budget-server-monitor'

# Prometheus 자체 메트릭 수집 설정
scrape_configs:
  # Prometheus 자신을 모니터링
  - job_name: 'prometheus'
    # 메트릭을 가져올 엔드포인트 설정
    static_configs:
      # localhost:9090에서 자신의 메트릭 수집
      - targets: ['localhost:9090']

  # Eureka 서버를 정적으로 모니터링
  - job_name: 'eureka-server'
    metrics_path: '/actuator/prometheus'
    static_configs:
      - targets: ['host.docker.internal:8761'] # Docker 컨테이너에서 호스트 PC의 8761 포트를 가리킴
        labels:
          application: 'EUREKA-SERVER' # Grafana에서 사용할 애플리케이션 이름 레이블

  # Eureka 기반 Service Discovery 설정
  - job_name: 'spring-micrometer'
    metrics_path: '/actuator/prometheus'
    # Eureka 서버 주소를 지정하여 등록된 서비스 목록을 가져옴
    eureka_sd_configs:
      - server: http://host.docker.internal:8761/eureka
    relabel_configs:
      # Eureka 메타데이터를 Prometheus 레이블로 변환
      - source_labels: [__meta_eureka_app_name]
        target_label: application